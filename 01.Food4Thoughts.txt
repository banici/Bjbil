
submitButton.addEventListener("click", function() {
// add logic here to pass the email to the "Bjbil nyhetsbrev mail".
// Maybe double check if user already exist and handle that in a certain way.

  emailInput.value = "";
  submitButton.disabled = true; // Disable button again after reset
});

Made a function for subscribe that can be adjusted with the comments inside func.

////////////////////////////////////////////////////////////////////////////////////////////////

FIX THIS: SHOULD CHECK FOR ELEMENT UNDER THE NAVIGATOR ON EACH PAGE SO IT DOES NOT JUMP WHEN SCROLLING DOWN. THIS WAS ONLY DONE FOR TIMELINE BUT IT SHOULD BE APPLIED FOR ALL.

////////////////////////////////////////////////////////////////////////////////////////////////

Ändra template på index som i länken: https://10web-site.ai/88/golden-jaguar/

// TimeLine från chat.lmysys: /////////////////

<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Image Gallery</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <div id="gallery-container"></div>
  <script src="script.js"></script>
</body>
</html>

.gallery-item {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 50px;
  opacity: 0;
  transform: translateX(-100%);
  transition: opacity 0.5s, transform 0.5s;
}

.gallery-item.right {
  transform: translateX(100%);
}

.gallery-item.visible {
  opacity: 1;
  transform: translateX(0);
}

.gallery-item .text {
  flex: 1;
  padding-right: 20px;
}

.gallery-item .small-image {
  width: 100px;
  height: 100px;
  object-fit: cover;
  margin: 0 20px;
}

.gallery-item .large-image {
  width: 300px;
  height: 200px;
  object-fit: cover;
}


const galleryContainer = document.getElementById('gallery-container');
const images = ['image1.jpg', 'image2.jpg', 'image3.jpg', 'image4.jpg', 'image5.jpg'];

let isRightToLeft = false;

function createGalleryItem(text, smallImageSrc, largeImageSrc) {
  const item = document.createElement('div');
  item.classList.add('gallery-item');
  if (isRightToLeft) {
    item.classList.add('right');
  }

  const textElement = document.createElement('div');
  textElement.classList.add('text');
  textElement.textContent = text;

  const smallImage = document.createElement('img');
  smallImage.classList.add('small-image');
  smallImage.src = smallImageSrc;

  const largeImage = document.createElement('img');
  largeImage.classList.add('large-image');
  largeImage.src = largeImageSrc;

  if (isRightToLeft) {
    item.appendChild(largeImage);
    item.appendChild(smallImage);
    item.appendChild(textElement);
  } else {
    item.appendChild(textElement);
    item.appendChild(smallImage);
    item.appendChild(largeImage);
  }

  isRightToLeft = !isRightToLeft;
  return item;
}

function loadImages() {
  const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
  const scrollHeight = document.documentElement.scrollHeight - document.documentElement.clientHeight;

  if (scrollTop >= scrollHeight) {
    const text = 'This is a sample text';
    const smallImageSrc = 'small-image.jpg';
    const largeImageSrc = 'large-image.jpg';
    const item = createGalleryItem(text, smallImageSrc, largeImageSrc);
    galleryContainer.appendChild(item);

    setTimeout(() => {
      item.classList.add('visible');
    }, 100);

    if (images.length > 0) {
      const [smallImageSrc, largeImageSrc] = images.splice(0, 2);
      const item = createGalleryItem(text, smallImageSrc, largeImageSrc);
      galleryContainer.appendChild(item);

      setTimeout(() => {
        item.classList.add('visible');
      }, 100);
    }
  }
}

window.addEventListener('scroll', loadImages);

